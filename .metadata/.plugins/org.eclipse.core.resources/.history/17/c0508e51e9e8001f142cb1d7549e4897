package com.example.service;

import java.util.ArrayList;
import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.example.client.BookingClient;
import com.example.dto.BookingDTO;
import com.example.dto.FlatDTO;
import com.example.entity.Flat;
import com.example.repository.FlatRepository;

@Service
public class FlatServiceImpl implements FlatService {

	@Autowired
	FlatRepository repo ;
	
	@Autowired
	BookingClient client ;
	
	@Override
	public Flat addFlat(Flat flat) {
		
		return repo.save(flat) ;
	}

	@Override
	public Flat getFlat(int flatId) {
		
		Optional<Flat> optional = repo.findById(flatId);
		return optional.get() ;
	}

	@Override
	public List<Flat> getAllFlats() {
		
		return repo.findAll();
		
	}

	@Override
	public String updateFlat(Flat flat) {

		repo.save(flat) ;
		return "Flat details have been updated successfully" ;
	}

	@Override
	public String deleteFlat(int flatId) {

		repo.deleteById(flatId);
		return "Flat deleted successfully" ;
	}

	// Additional methods
	
	
	@Override
	public List<Flat> getAllFlatsByLandlordId(int landlordId) {
		return repo.getAllFlatsByLandlordId(landlordId) ;
		
	}

	@Override
	public List<BookingDTO> getAllBookingsOfFlat(int flatId) {
		
		return client.getAllBookingOfFlat(flatId);
	}

	@Override
	public List<FlatDTO> getAllFlatsOfLandlordWithBookings(int landlordId) {
		 
		List<FlatDTO> dtoList = new ArrayList<>() ;
		List<Flat> list = getAllFlatsByLandlordId(landlordId) ;
		for(Flat flat : list) {
			FlatDTO dto = new FlatDTO(flat.getFlatId(), flat.getFlatRent(), flat.getFlatAddress(), flat.getAvailability(), flat.getLandlordId(), getAllBookingsOfFlat(flat.getFlatId()) ) ;
		}
	}
	
	

}
